{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacaoServices","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","erro","importa","apaga","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus"],"mappings":";;;;;;IAAMA,oB;AAEF,oCAAa;AAAA;;AACT,YAAIC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR;AACA,aAAKG,UAAL,GAAkBJ,EAAE,OAAF,CAAlB;AACA,aAAKK,gBAAL,GAAwBL,EAAE,aAAF,CAAxB;AACA,aAAKM,WAAL,GAAmBN,EAAE,QAAF,CAAnB;;AAEA,aAAKO,iBAAL,GAAyB,IAAIC,IAAJ,EAAU;AAC/B,YAAIC,gBAAJ,EADqB,EACG;AACxB,YAAIC,eAAJ,CAAoBV,EAAE,kBAAF,CAApB,CAFqB,EAEuB;AAC5C,kBAHqB,EAGT,SAHS,CAAzB,CANS,CASkB;;AAE3B,aAAKW,SAAL,GAAiB,IAAIH,IAAJ,CACb,IAAII,QAAJ,EADa,EAEb,IAAIC,YAAJ,CAAiBb,EAAE,eAAF,CAAjB,CAFa,EAGb,OAHa,CAAjB;;AAKA,aAAKc,QAAL,GAAgB,IAAIC,kBAAJ,EAAhB;;AAEA,aAAKC,KAAL;AACH;;;;gCAEM;AAAA;;AACH;AACA,iBAAKF,QAAL,CAAcG,KAAd,GAAsBC,IAAtB,CAA2B;AAAA,uBAAeC,YAAYC,OAAZ,CACtC;AAAA,2BAAc,MAAKb,iBAAL,CAAuBc,QAAvB,CAAgCC,UAAhC,CAAd;AAAA,iBADsC,CAAf;AAAA,aAA3B,EAECC,KAFD,CAEO;AAAA,uBAAS,MAAKZ,SAAL,CAAea,KAAf,GAAuBC,KAAhC;AAAA,aAFP;;AAIA;AACAC,wBAAY,YAAM;AACd,sBAAKC,kBAAL;AACH,aAFD,EAEG,IAFH;AAGH;;;iCAEQC,K,EAAM;AAAA;;AACXA,kBAAMC,cAAN;;AAEA,gBAAIP,aAAa,KAAKQ,eAAL,EAAjB;;AAEA,iBAAKhB,QAAL,CAAciB,QAAd,CAAuBT,UAAvB,EAAmCJ,IAAnC,CAAwC,oBAAY;AAChD;AACA,uBAAKX,iBAAL,CAAuBc,QAAvB,CAAgCC,UAAhC;AACA,uBAAKX,SAAL,CAAea,KAAf,GAAuBQ,QAAvB;AACA,uBAAKC,gBAAL;AACH,aALD,EAKGV,KALH,CAKS;AAAA,uBAAQ,OAAKZ,SAAL,CAAea,KAAf,GAAuBU,IAA/B;AAAA,aALT;AAMH;;;6CAEmB;AAAA;;AAChB;AACA,iBAAKpB,QAAL,CAAcqB,OAAd,CAAsB,KAAK5B,iBAAL,CAAuBY,WAA7C,EAA0DD,IAA1D,CAA+D,uBAAe;AAC1EC,4BAAYC,OAAZ,CAAoB,sBAAc;AAClC,2BAAKb,iBAAL,CAAuBc,QAAvB,CAAgCC,UAAhC;AACA,2BAAKX,SAAL,CAAea,KAAf,GAAuB,mCAAvB;AAA2D,iBAF3D;AAGH,aAJD,EAIGD,KAJH,CAIS;AAAA,uBAAQ,OAAKZ,SAAL,CAAea,KAAf,GAAuBU,IAA/B;AAAA,aAJT;AAKH;;;gCAEM;AAAA;;AACH,iBAAKpB,QAAL,CAAcsB,KAAd,GAAsBlB,IAAtB,CAA2B,oBAAY;AACnC,uBAAKP,SAAL,CAAea,KAAf,GAAuBQ,QAAvB,CADmC,CACH;AAChC,uBAAKzB,iBAAL,CAAuB8B,OAAvB,GAFmC,CAEF;AACpC,aAHD,EAGGd,KAHH,CAGS;AAAA,uBAAS,OAAKZ,SAAL,CAAea,KAAf,CAAqBC,KAArB,CAAT;AAAA,aAHT;AAIH;;;0CAEiB;AACd,mBAAO,IAAIa,UAAJ,CACHC,WAAWC,aAAX,CAAyB,KAAKpC,UAAL,CAAgBqC,KAAzC,CADG,EAEHC,SAAS,KAAKrC,gBAAL,CAAsBoC,KAA/B,CAFG,EAGHE,WAAW,KAAKrC,WAAL,CAAiBmC,KAA5B,CAHG,CAAP;AAKH;;;2CAEkB;AACf,iBAAKrC,UAAL,CAAgBqC,KAAhB,GAAwB,EAAxB;AACA,iBAAKpC,gBAAL,CAAsBoC,KAAtB,GAA8B,CAA9B;AACA,iBAAKnC,WAAL,CAAiBmC,KAAjB,GAAyB,GAAzB;AACA,iBAAKrC,UAAL,CAAgBwC,KAAhB;AACH","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController{\n\n    constructor(){\n        let $ = document.querySelector.bind(document)\n        this._inputData = $(\"#data\")\n        this._inputQuantidade = $(\"#quantidade\")\n        this._inputValor = $(\"#valor\")\n\n        this._listaNegociacoes = new Bind( //Instanciando a class ProxyFactory e chamando o metodo create com, 3 parametros\n            new ListaNegociacoes(), //MOdelo\n            new NegociacoesView($('#negociacoesView')), //View\n            'adiciona', 'esvazia') //Condição para instanciar\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto')\n\n        this._service = new NegociacaoServices()\n\n        this._init()\n    }\n\n    _init(){\n        //Instanciando uma NegociacaoSerives e chamando o metodo lista que me retorna uma promesa de que os dados serão listados, se der sucesso, ele pega os dados e insere na lista de negociacoes, de der erro ele exibe a mensagem de erro\n        this._service.lista().then(negociacoes => negociacoes.forEach(\n            negociacao => this._listaNegociacoes.adiciona(negociacao)))\n        .catch(error => this._mensagem.texto = error)\n\n        //Chamando o metodo de importaNegociacoes de 3 em 3 segundoss, para que ele messmo se atualize\n        setInterval(() => {\n            this.importaNegociacoes()\n        }, 3000)\n    }\n\n    adiciona(event){\n        event.preventDefault()\n\n        let negociacao = this._criaNegociacao()\n\n        this._service.cadastra(negociacao).then(mensagem => {\n            //Inserindo os dados na lista de negociacao para ver na tela\n            this._listaNegociacoes.adiciona(negociacao)\n            this._mensagem.texto = mensagem\n            this._limpaFormulario()\n        }).catch(erro => this._mensagem.texto = erro)\n    }\n\n    importaNegociacoes(){\n        //Chamando o metodo importa de NegociacaoServices, passando a lista de negociacoes como parametro, recebendo uma promesa informando se essa lista já foi importada ou não, se não ele importa e informa o ususario, se já existe ele não importa e se der erro, ele informa o erro\n        this._service.importa(this._listaNegociacoes.negociacoes).then(negociacoes => {\n            negociacoes.forEach(negociacao => {\n            this._listaNegociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociações do período importadas'})\n        }).catch(erro => this._mensagem.texto = erro);\n    }\n\n    apaga(){\n        this._service.apaga().then(mensagem => {\n            this._mensagem.texto = mensagem //Inserindo a mensagem no alerta de sucesso\n            this._listaNegociacoes.esvazia() //Esvaziando o array que contem as negociações\n        }).catch(error => this._mensagem.texto(error))\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        )\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = ''\n        this._inputQuantidade.value = 1\n        this._inputValor.value = 0.0\n        this._inputData.focus()\n    }\n}"]}