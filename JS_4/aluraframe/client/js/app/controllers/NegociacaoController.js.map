{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoServices","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","erro","importa","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes'\nimport {Mensagem} from '../models/Mensagem'\nimport {NegociacoesView} from '../views/NegociacoesView'\nimport {MensagemView} from '../views/MensagemView'\nimport {NegociacaoServices} from '../services/NegociacaoServices'\nimport {DateHelper} from '../helpers/DateHelper'\nimport {Bind} from '../helpers/Bind'\nimport {Negociacao} from '../models/Negociacao'\n\nexport class NegociacaoController{\n\n    constructor(){\n        let $ = document.querySelector.bind(document)\n        this._inputData = $(\"#data\")\n        this._inputQuantidade = $(\"#quantidade\")\n        this._inputValor = $(\"#valor\")\n\n        this._listaNegociacoes = new Bind( //Instanciando a class ProxyFactory e chamando o metodo create com, 3 parametros\n            new ListaNegociacoes(), //MOdelo\n            new NegociacoesView($('#negociacoesView')), //View\n            'adiciona', 'esvazia') //Condição para instanciar\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto')\n\n        this._service = new NegociacaoServices()\n\n        this._init()\n    }\n\n    _init(){\n        //Instanciando uma NegociacaoSerives e chamando o metodo lista que me retorna uma promesa de que os dados serão listados, se der sucesso, ele pega os dados e insere na lista de negociacoes, de der erro ele exibe a mensagem de erro\n        this._service.lista().then(negociacoes => negociacoes.forEach(\n            negociacao => this._listaNegociacoes.adiciona(negociacao)))\n        .catch(error => this._mensagem.texto = error)\n\n        //Chamando o metodo de importaNegociacoes de 3 em 3 segundoss, para que ele messmo se atualize\n        setInterval(() => {\n            this.importaNegociacoes()\n        }, 3000)\n    }\n\n    adiciona(event){\n        event.preventDefault()\n\n        let negociacao = this._criaNegociacao()\n\n        this._service.cadastra(negociacao).then(mensagem => {\n            //Inserindo os dados na lista de negociacao para ver na tela\n            this._listaNegociacoes.adiciona(negociacao)\n            this._mensagem.texto = mensagem\n            this._limpaFormulario()\n        }).catch(erro => this._mensagem.texto = erro)\n    }\n\n    importaNegociacoes(){\n        //Chamando o metodo importa de NegociacaoServices, passando a lista de negociacoes como parametro, recebendo uma promesa informando se essa lista já foi importada ou não, se não ele importa e informa o ususario, se já existe ele não importa e se der erro, ele informa o erro\n        this._service.importa(this._listaNegociacoes.negociacoes).then(negociacoes => {\n            negociacoes.forEach(negociacao => {\n            this._listaNegociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociações do período importadas'})\n        }).catch(erro => this._mensagem.texto = erro);\n    }\n\n    apaga(){\n        this._service.apaga().then(mensagem => {\n            this._mensagem.texto = mensagem //Inserindo a mensagem no alerta de sucesso\n            this._listaNegociacoes.esvazia() //Esvaziando o array que contem as negociações\n        }).catch(error => this._mensagem.texto(error))\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        )\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = ''\n        this._inputQuantidade.value = 1\n        this._inputValor.value = 0.0\n        this._inputData.focus()\n    }\n}"]}